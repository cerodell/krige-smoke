{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "a8972ac5",
   "metadata": {},
   "source": [
    "# Data Setup"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6778fd67",
   "metadata": {},
   "source": [
    "### PurpleAir and Government operated air quality monitors\n",
    "- See find-pa-station.py,  get-pa-data.py and remormate-gov.py for how I obtained and combined data in a single dataset.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5c8535b0",
   "metadata": {
    "lines_to_next_cell": 0
   },
   "source": [
    "Load python modules"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "79adbb3f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import context\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import xarray as xr\n",
    "import geopandas as gpd\n",
    "\n",
    "import plotly.express as px\n",
    "import matplotlib.image as mpimg\n",
    "import plotly.figure_factory as ff\n",
    "\n",
    "from context import data_dir"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "514a540f",
   "metadata": {},
   "source": [
    "### Case Study.\n",
    "\n",
    "I chose to focus on July 2021, post heat dome with high fire activity in souther BC and the PNW of the US."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0186334a",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "img=mpimg.imread(str(data_dir)+'/obs/worldview.jpeg')\n",
    "fig = px.imshow(img)\n",
    "fig.update_layout(margin=dict(l=10, r=10, t=30, b=30))\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "85a4417f",
   "metadata": {
    "lines_to_next_cell": 0
   },
   "source": [
    "### Choose date and time of interest to test kriging"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5f614c93",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Define domain and datetime of interest\n",
    "wesn = [-129.0, -90.0, 40.0, 60.0]  \n",
    "dot = \"2021-07-16T22:00:00\"\n",
    "\n",
    "\n",
    "## Open Government AQ data and index on dot\n",
    "gov_ds = xr.open_dataset(str(data_dir) + f\"/gov_aq.nc\")\n",
    "gov_ds = gov_ds.sel(datetime=dot)\n",
    "\n",
    "## Open PurpleAir AQ data, index on dot and drop variables to make ds concat with gov_ds\n",
    "pa_ds = xr.open_dataset(str(data_dir) + f\"/purpleair_north_america.nc\")\n",
    "pa_ds = pa_ds.sel(datetime=dot)\n",
    "pa_ds = pa_ds.drop([\"PM1.0\", \"PM10.0\", \"pressure\", \"PM2.5_ATM\"])\n",
    "\n",
    "## concat both datasets on as station id\n",
    "ds = xr.concat([pa_ds, gov_ds], dim=\"id\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dfcb2be1",
   "metadata": {
    "lines_to_next_cell": 0
   },
   "source": [
    "### Remove outliers by..\n",
    "- Erroneously high values\n",
    "- Non-physical negative values\n",
    "- Outside two standard deviation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d5656770",
   "metadata": {
    "lines_to_next_cell": 2
   },
   "outputs": [],
   "source": [
    "ds = ds.where(ds[\"PM2.5\"] < 1000, drop=True)  ## Erroneously high values\n",
    "ds = ds.where(ds[\"PM2.5\"] > 0, drop=True)  ## Non-physical negative values\n",
    "mean = ds[\"PM2.5\"].mean()  ## outside two standard deviation\n",
    "sd = ds[\"PM2.5\"].std()\n",
    "sd_ds = ds.where(\n",
    "    (ds[\"PM2.5\"] > mean - 2 * sd) & (ds[\"PM2.5\"] < mean + 2 * sd), drop=True\n",
    ")\n",
    "\n",
    "sd_ds"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa4c1968",
   "metadata": {
    "lines_to_next_cell": 0
   },
   "source": [
    "### Reformat Date\n",
    "- Convert our dataset to a dataframe and drop all aq stations outside our domain"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bac529ad",
   "metadata": {
    "lines_to_next_cell": 0
   },
   "outputs": [],
   "source": [
    "df_pm25 = sd_ds[\"PM2.5\"].to_dataframe().reset_index()\n",
    "df_pm25 = df_pm25.loc[\n",
    "    (df_pm25[\"lat\"] > wesn[2])\n",
    "    & (df_pm25[\"lat\"] < wesn[3])\n",
    "    & (df_pm25[\"lon\"] > wesn[0])\n",
    "    & (df_pm25[\"lon\"] < wesn[1])\n",
    "]\n",
    "\n",
    "df_pm25.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a7087d0",
   "metadata": {
    "lines_to_next_cell": 0
   },
   "source": [
    "### Plot Data\n",
    "#### Distribution\n",
    "- Lets look at the data by first plotting the distribution of the measured PM 2.5 measured values."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e6763831",
   "metadata": {},
   "outputs": [],
   "source": [
    "fig = ff.create_distplot([sd_ds[\"PM2.5\"].values], [\"PM2.5\"], colors=[\"green\"])\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4555389f",
   "metadata": {
    "lines_to_next_cell": 0
   },
   "source": [
    "#### Spatial scatter plot\n",
    "Now lets spatially look at the data by a scatter plot of the measured PM 2.5 values at each station."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9ac36fbb",
   "metadata": {},
   "outputs": [],
   "source": [
    "fig = px.scatter_mapbox(\n",
    "    df_pm25,\n",
    "    lat=\"lat\",\n",
    "    lon=\"lon\",\n",
    "    color=\"PM2.5\",\n",
    "    size=\"PM2.5\",\n",
    "    color_continuous_scale=\"jet\",\n",
    "    # hover_name=\"id\",\n",
    "    center={\"lat\": 50., \"lon\": -110.},\n",
    "    hover_data=[\"PM2.5\"],\n",
    "    mapbox_style=\"carto-positron\",\n",
    "    zoom=3.,\n",
    ")\n",
    "fig.update_layout(margin=dict(l=0, r=100, t=30, b=10))\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "19c580aa",
   "metadata": {
    "lines_to_next_cell": 2
   },
   "source": [
    "We can see how the fires in BC are creating poor air quality in the east rockies and prairies/plains."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c566e5e",
   "metadata": {},
   "source": [
    "### Reproject Data\n",
    "\n",
    "We want to convert the data to the linear, meter-based Lambert projection (EPSG:3347) recommended by Statistics Canada. This is helpful as lat/lon coordinates are not good for measuring distances which is important for interpolating data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6162df38",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "gpm25 = gpd.GeoDataFrame(\n",
    "    df_pm25,\n",
    "    crs=\"EPSG:4326\",\n",
    "    geometry=gpd.points_from_xy(df_pm25[\"lon\"], df_pm25[\"lat\"]),\n",
    ").to_crs(\"EPSG:3347\")\n",
    "gpm25[\"Easting\"], gpm25[\"Northing\"] = gpm25.geometry.x, gpm25.geometry.y\n",
    "gpm25.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4fdf16ec",
   "metadata": {},
   "source": [
    "### Onto Ordinary Kriging..."
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "cell_metadata_filter": "-all",
   "main_language": "python",
   "notebook_metadata_filter": "-all"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
